{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Layout from '../Components/layout';\nimport Fetch from '../components/Layout';\nimport Display from '../Components/Display';\nimport { useRouter } from 'next/router';\nimport { useState } from 'react';\nimport Filter from '../Components/filter';\nimport { Dropdown, DropdownButton } from 'react-bootstrap'; // const router = useRouter()\n\nvar Index = function Index(_ref) {\n  var data = _ref.data,\n      launch = _ref.launch;\n\n  var _useState = useState(\"\"),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var handleSelect = function handleSelect(e) {\n    console.log(e);\n    setValue(e);\n  };\n\n  var dataList = data;\n  var LaunchTrue = launch; // var Parsed = JSON.Parse(data);\n\n  if (value === true) {\n    dataList = data.filter(function (element) {\n      return element.launch_success === true;\n    });\n    return dataList;\n  }\n\n  return /*#__PURE__*/_jsx(Layout, {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"h1\", {\n        children: \"Welcome to Space X Programs \"\n      }), /*#__PURE__*/_jsx(Display, {\n        passedData: dataList,\n        launch: LaunchTrue\n      })]\n    })\n  });\n}; // if({value} == '') {\n\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"https://api.spacexdata.com/v3/launches?limit=100\");\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            data = _context.sent;\n            return _context.abrupt(\"return\", {\n              data: data\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}(); //}\n\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}