{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\monik\\\\SpaceX_Sapient\\\\pages\\\\index.js\",\n    _this = this;\n\nimport Layout from '../Components/layout';\nimport Fetch from '../components/Layout';\nimport Display from '../Components/Display';\nimport { useRouter } from 'next/router';\nimport { useEffect } from 'react'; // const router = useRouter()\n\nvar Index = function Index(_ref) {\n  var data = _ref.data,\n      launch = _ref.launch;\n  var dataList = data;\n  var LaunchTrue = launch;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Space X Programs \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 8\n      }, _this), /*#__PURE__*/_jsxDEV(Display, {\n        passedData: dataList,\n        launch: LaunchTrue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 8\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = Index;\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('https://api.spacexdata.com/v3/launches?limit=100&launch_success=true');\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            data = _context.sent;\n            return _context.abrupt(\"return\", {\n              data: data\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // const postId = 'limit=100&amp;launch_success=true';\n// const param = 'ok';\n// router.push(\n//     {\n//       pathname: `/v3/launches`,\n//       query: {\n//         postId,\n//         param\n//       }\n//     },\n//     `/posts/${postId}?param=${param}`,\n//     {shallow: true}\n// );\n// router.push({\n//   pathname: '/launches',\n//   query: { limit=100&amp,\n//     launch_success=true }\n// }, \n// undefined, { shallow: true }\n// )\n// Index.getInitialProps = async (ctx)=>{\n//   const resL = await fetch('https://api.spacexdata.com/v3/launches?limit=100&amp;launch_success=true');\n//   const launch = await resL.json();  \n//   return { launch: launch}\n// }\n// Page.getInitialProps = async (ctx) => {\n//     const res = await fetch('https://api.github.com/repos/vercel/next.js')\n//     const json = await res.json()\n//     return { stars: json.stargazers_count }\n//   }\n\n\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/monik/SpaceX_Sapient/pages/index.js"],"names":["Layout","Fetch","Display","useRouter","useEffect","Index","data","launch","dataList","LaunchTrue","getInitialProps","ctx","fetch","res","json"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CAGA;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAoB;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,MAAZC,MAAY,QAAZA,MAAY;AAC9B,MAAMC,QAAQ,GAAGF,IAAjB;AACA,MAAMG,UAAU,GAAGF,MAAnB;AACM,sBACF,QAAC,MAAD;AAAA,2BACA;AAAA,8BACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADC,eAGD,QAAC,OAAD;AAAS,QAAA,UAAU,EAAGC,QAAtB;AAAgC,QAAA,MAAM,EAAGC;AAAzC;AAAA;AAAA;AAAA;AAAA,eAHC;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,WADE;AAUL,CAbL;;KAAMJ,K;;AAgBNA,KAAK,CAACK,eAAN;AAAA,uEAAwB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFC,KAAK,CAAC,sEAAD,CADH;;AAAA;AACdC,YAAAA,GADc;AAAA;AAAA,mBAEDA,GAAG,CAACC,IAAJ,EAFC;;AAAA;AAEdR,YAAAA,IAFc;AAAA,6CAGb;AAAEA,cAAAA,IAAI,EAAEA;AAAR,aAHa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA,I,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,eAAeD,KAAf","sourcesContent":["import Layout from '../Components/layout';\r\nimport Fetch from '../components/Layout';\r\n\r\nimport Display from '../Components/Display';\r\nimport { useRouter } from 'next/router';\r\nimport { useEffect } from 'react'\r\n\r\n\r\n// const router = useRouter()\r\n\r\nconst Index = ({ data,launch })=> {\r\n    const dataList = data;\r\n    const LaunchTrue = launch;\r\n          return(\r\n        <Layout>\r\n        <div>\r\n       <h1>Welcome to Space X Programs </h1> \r\n      \r\n       <Display passedData ={dataList} launch ={LaunchTrue} />\r\n        </div>\r\n       \r\n        </Layout>\r\n          )\r\n    }\r\n   \r\n\r\nIndex.getInitialProps = async (ctx)=>{\r\n    const res = await fetch('https://api.spacexdata.com/v3/launches?limit=100&launch_success=true');\r\n    const data = await res.json();  \r\n    return { data: data }\r\n\r\n}\r\n\r\n// const postId = 'limit=100&amp;launch_success=true';\r\n// const param = 'ok';\r\n// router.push(\r\n//     {\r\n//       pathname: `/v3/launches`,\r\n//       query: {\r\n//         postId,\r\n//         param\r\n//       }\r\n//     },\r\n//     `/posts/${postId}?param=${param}`,\r\n//     {shallow: true}\r\n// );\r\n\r\n// router.push({\r\n//   pathname: '/launches',\r\n//   query: { limit=100&amp,\r\n//     launch_success=true }\r\n// }, \r\n// undefined, { shallow: true }\r\n// )\r\n\r\n\r\n\r\n// Index.getInitialProps = async (ctx)=>{\r\n//   const resL = await fetch('https://api.spacexdata.com/v3/launches?limit=100&amp;launch_success=true');\r\n//   const launch = await resL.json();  \r\n//   return { launch: launch}\r\n\r\n// }\r\n\r\n// Page.getInitialProps = async (ctx) => {\r\n//     const res = await fetch('https://api.github.com/repos/vercel/next.js')\r\n//     const json = await res.json()\r\n//     return { stars: json.stargazers_count }\r\n//   }\r\n  \r\nexport default Index;"]},"metadata":{},"sourceType":"module"}