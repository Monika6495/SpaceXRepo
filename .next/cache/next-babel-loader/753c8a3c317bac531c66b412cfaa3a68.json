{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\monik\\\\SpaceX_Sapient\\\\pages\\\\index.js\",\n    _this = this;\n\nimport Layout from '../Components/layout';\nimport Fetch from '../components/Layout';\n\nvar Index = function Index(_ref) {\n  var stars = _ref.stars;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Space X Programs \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 8\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Next stars: \", stars]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 8\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = Index;\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var res, json;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('https://api.github.com/repos/vercel/next.js');\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            json = _context.sent;\n            return _context.abrupt(\"return\", {\n              stars: json.stargazers_count\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // Page.getInitialProps = async (ctx) => {\n//     const res = await fetch('https://api.github.com/repos/vercel/next.js')\n//     const json = await res.json()\n//     return { stars: json.stargazers_count }\n//   }\n\n\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/monik/SpaceX_Sapient/pages/index.js"],"names":["Layout","Fetch","Index","stars","getInitialProps","ctx","fetch","res","json","stargazers_count"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,sBACN,QAAC,MAAD;AAAA,2BACA;AAAA,8BACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADC,eAED;AAAA,mCAAkBA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,eAFC;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,WADM;AAAA,CAAd;;KAAMD,K;;AAUNA,KAAK,CAACE,eAAN;AAAA,uEAAwB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFC,KAAK,CAAC,6CAAD,CADH;;AAAA;AACdC,YAAAA,GADc;AAAA;AAAA,mBAEDA,GAAG,CAACC,IAAJ,EAFC;;AAAA;AAEdA,YAAAA,IAFc;AAAA,6CAGb;AAAEL,cAAAA,KAAK,EAAEK,IAAI,CAACC;AAAd,aAHa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA,I,CAOA;AACA;AACA;AACA;AACA;;;AAEA,eAAeP,KAAf","sourcesContent":["import Layout from '../Components/layout';\r\nimport Fetch from '../components/Layout';\r\n\r\n\r\nconst Index = ({ stars })=> (\r\n        <Layout>\r\n        <div>\r\n       <h1>Welcome to Space X Programs </h1> \r\n       <div>Next stars: {stars}</div>\r\n        </div>\r\n        </Layout>\r\n   \r\n);\r\n\r\nIndex.getInitialProps = async (ctx)=>{\r\n    const res = await fetch('https://api.github.com/repos/vercel/next.js');\r\n    const json = await res.json();\r\n    return { stars: json.stargazers_count }\r\n\r\n}\r\n\r\n// Page.getInitialProps = async (ctx) => {\r\n//     const res = await fetch('https://api.github.com/repos/vercel/next.js')\r\n//     const json = await res.json()\r\n//     return { stars: json.stargazers_count }\r\n//   }\r\n  \r\nexport default Index;"]},"metadata":{},"sourceType":"module"}