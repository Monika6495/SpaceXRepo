{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Layout from '../Components/layout';\nimport Fetch from '../components/Layout';\nimport Display from '../Components/Display';\n\nvar Index = function Index(_ref) {\n  var data = _ref.data;\n  var dataList = data;\n  return /*#__PURE__*/_jsx(Layout, {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"h1\", {\n        children: \"Welcome to Space X Programs \"\n      }), /*#__PURE__*/_jsx(Display, {\n        passedData: dataList\n      })]\n    })\n  });\n};\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('https://api.spacexdata.com/v3/launches?limit=100');\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            data = _context.sent;\n            return _context.abrupt(\"return\", {\n              data: data\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // Page.getInitialProps = async (ctx) => {\n//     const res = await fetch('https://api.github.com/repos/vercel/next.js')\n//     const json = await res.json()\n//     return { stars: json.stargazers_count }\n//   }\n\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}